Паттерны проектирования (Softwae Design Patterns)

1) Паттерны, отвеачющие за создание объектов (creational patterns)
	
	- фабрика (factory): как просто создавать много похожих объектов
	класс по проиводству объектов других классов
	
	- абстрактная фабрика (abstract factory)
	абстрактный класс на основе которого создаются другие фабрики
	фабрика по производству фабрик
	
	- builder
	чтобы создать сложный объект надо заполнить параметры 
	объекта попроще и создать
	
	- object pool 
	паттерн, описывающий как бы сделать так чтобы объекты
	в процессе работы программы не приходилось постоянно
	создавать и уничтожать
	
2) Структурные паттерны (structural patterns): как должен быть устроен объект

	- adapter wrapper..
	
	adapter наследный класс, в котором ничего не меняется, но добавляется
	новый интерфейс
	
	wrapper - оборачиваем новой логикой (не обязательно интерфейсами)
	
	- composite
	класс хранящий в себе иерархию класса сложную, позволяющую работать
	с ним как по отдельности так и как с единым целым
	
	- facade
	
3) Поведенческие паттерны (behavioral patterns)

	- iterator
	паттерн для автоматического перебора коллекции
	
	- null object
	позволяет избавиться от исключений при обращении к тому чего нет
	создается объект на который ссылаются все данные которые
	не инициализированы
	
	- visitor
	лписывает как добавить единую команду к набору классов
	чтобы сами классы менять не пришлось
	
4) Паттерны многопоточности (concurrency patterns)
То как программировать многопоточность

	- join
	как дождаться завершения потока
	
	- lock
	
	- monitor
	
и т.д. на курсе Java 2

Паттерны = рецепты, решающие многие современные задачи.